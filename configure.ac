#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.
AC_COPYRIGHT((c) the Regents of the University of California)
AC_REVISION($Revision$)
AC_PREREQ(2.63)

AC_INIT([FastBit],[ibis1.0.4],[fastbit-users@hpcrdm.lbl.gov])
AC_CONFIG_MACRO_DIR([tests/m4])
AC_CONFIG_SRCDIR([src/index.cpp])
AC_CONFIG_HEADER([src/config.h])
AM_INIT_AUTOMAKE

LIB_VERSION_INFO=0:9:0
# Checks for programs.
#AC_PROG_YACC
#AC_PROG_LEX
AC_PROG_CC
AC_PROG_CXX
LT_INIT

AC_PROG_INSTALL
AC_PROG_MAKE_SET

# Checks for libraries.
AC_CHECK_LIB([m], [log10])
AC_CHECK_LIB([rt], [clock_gettime])
###AC_CHECK_LIB([pthread], [pthread_self], , AC_MSG_ERROR(FastBit requires pthread support))

# Checks for header files.
AC_HEADER_DIRENT
AC_HEADER_STDC
AC_CHECK_HEADERS([fcntl.h float.h limits.h stdlib.h string.h strings.h sys/time.h unistd.h values.h])

# Checks for typedefs, structures, and compiler characteristics.
AC_HEADER_STDBOOL
AC_C_CONST
AC_C_INLINE
AC_TYPE_OFF_T
AC_TYPE_SIZE_T
AC_HEADER_TIME
AC_STRUCT_TM
AC_TYPE_INT16_T
AC_TYPE_INT32_T
AC_TYPE_INT64_T
AC_TYPE_UINT64_T
AC_TYPE_UINT32_T
AC_TYPE_UINT16_T
AC_C_VOLATILE

# Checks for library functions.
AC_FUNC_MALLOC
AC_FUNC_MEMCMP
AC_FUNC_MMAP
AC_FUNC_REALLOC
AC_FUNC_SELECT_ARGTYPES
AC_FUNC_STRTOD
AC_FUNC_VPRINTF
AC_CHECK_FUNCS([floor getpagesize getpass gettimeofday memset mkdir] , ,)

# ----- stuff not generated by autoscan

#AC_MSG_CHECKING(whether to enable debugging)
AC_ARG_ENABLE(debug,
              [AS_HELP_STRING([--enable-debug],[turn on debugging [default: disable]])],
	      [enable_debug="yes"], [enable_debug="no"])
AC_ARG_ENABLE(xopt,
	      [AS_HELP_STRING([--enable-xopt],[turn on extra optimization [default: disable]])],
	      [enable_xopt="yes"], [enable_xopt="no"])
if test "x$enable_debug" = "xyes"; then
if test "x$enable_xopt" = "xyes"; then
OPT="-g -O2"
else
OPT="-g -O0"
fi
#AC_MSG_RESULT(yes)
else
if test "x$enable_xopt" = "xyes"; then
OPT="-g0 -O5"
else
OPT="-g0 -O"
fi
#AC_MSG_RESULT(no)
fi
CFLAGS="$CFLAGS $OPT"

AC_DEFUN([Z_CHECK_PTHREAD], [
AC_REQUIRE([AC_CANONICAL_HOST])
AC_LANG_PUSH(C++)
AC_LANG([C])

z_check_pthread_ok=no
# check if the user has set any of the PTHREAD_LIBS, etcetera
# environment variables, and if threads linking works using them
if test x"$PTHREAD_LIBS$PTHREAD_CFLAGS" != x; then
   save_CFLAGS="$CFLAGS"
   CFLAGS="$CFLAGS $PTHREAD_CFLAGS"
   save_LIBS="$LIBS"
   LIBS="$PTHREAD_LIBS $LIBS"
   AC_MSG_CHECKING([for pthread_join in LIBS=$PTHREAD_LIBS with CFLAGS=$PTHREAD_CFLAGS])
   AC_TRY_LINK_FUNC(pthread_join, z_check_pthread_ok=yes)
   AC_MSG_RESULT($z_check_pthread_ok)
   if test x"$z_check_pthread_ok" = xno; then
       PTHREAD_LIBS=""
       PTHREAD_CFLAGS=""
   fi
   LIBS="$save_LIBS"
   CFLAGS="$save_CFLAGS"
fi

z_check_pthread_flags="pthreads none -Kthread -kthread lthread -pthread -pthreads -mthreads pthread --thread-safe -mt pthread-config"
# pthreads: AIX (must check this before -lpthread)
# none: in case threads are in libc; should be tried before -Kthread and
#       other compiler flags to prevent continual compiler warnings
# -Kthread: Sequent (threads in libc, but -Kthread needed for pthread.h)
# -kthread: FreeBSD kernel threads (preferred to -pthread since SMP-able)
# lthread: LinuxThreads port on FreeBSD (also preferred to -pthread)
# -pthread: Linux/gcc (kernel threads), BSD/gcc (userland threads)
# -pthreads: Solaris/gcc
# -mthreads: Mingw32/gcc, Lynx/gcc
# -mt: Sun Workshop C (may only link SunOS threads [-lthread], but it
#      doesn't hurt to check since this sometimes defines pthreads too;
#      also defines -D_REENTRANT)
#      ... -mt is also the pthreads flag for HP/aCC
# pthread: Linux, etcetera
# --thread-safe: KAI C++
# pthread-config: use pthread-config program (for GNU Pth library)

case "${host_cpu}-${host_os}" in
        *solaris*)
        # On Solaris, look for -pthreads and -lpthread first:
        z_check_pthread_flags="-pthreads pthread -mt -pthread $z_check_pthread_flags"
        ;;
esac

if test x"$z_check_pthread_ok" = xno; then
for flag in $z_check_pthread_flags; do

    case $flag in
        none)
        AC_MSG_CHECKING([whether pthreads work without any flags])
        ;;

        -*)
        AC_MSG_CHECKING([whether pthreads work with $flag])
        PTHREAD_CFLAGS="$flag"
        ;;

        pthread-config)
        AC_CHECK_PROG(z_check_pthread_config, pthread-config, yes, no)
        if test x"$z_check_pthread_config" = xno; then continue; fi
        PTHREAD_CFLAGS="`pthread-config --cflags`"
        PTHREAD_LIBS="`pthread-config --ldflags` `pthread-config --libs`"
        ;;

        *)
        AC_MSG_CHECKING([for the pthreads library -l$flag])
        PTHREAD_LIBS="-l$flag"
        ;;
    esac

    save_LIBS="$LIBS"
    save_CFLAGS="$CFLAGS"
    LIBS="$PTHREAD_LIBS $LIBS"
    CFLAGS="$CFLAGS $PTHREAD_CFLAGS"

    # Check for pthread_join because it is in -lpthread on IRIX
    # while pthread_create is in libc.  Check for pthread_attr_init
    # due to DEC craziness with -lpthreads.  Check for
    # pthread_cleanup_push because it is one of the few pthread
    # functions on Solaris that doesn't have a non-functional libc stub.
    AC_LINK_IFELSE([AC_LANG_PROGRAM([[#include <pthread.h>]], [[pthread_t th; pthread_join(th, 0);
                 pthread_attr_init(0); pthread_cleanup_push(0, 0);
                 pthread_create(0,0,0,0); pthread_cleanup_pop(0); ]])],[z_check_pthread_ok=yes],[])

    LIBS="$save_LIBS"
    CFLAGS="$save_CFLAGS"

    AC_MSG_RESULT($z_check_pthread_ok)
    if test "x$z_check_pthread_ok" = xyes; then
        break;
    fi

    PTHREAD_LIBS=""
    PTHREAD_CFLAGS=""
done
fi

# Various other checks:
if test "x$z_check_pthread_ok" = xyes; then
    LIBS="$PTHREAD_LIBS $LIBS"
    save_CFLAGS="$CFLAGS"
    CFLAGS="$CFLAGS $PTHREAD_CFLAGS"

    AC_MSG_CHECKING([if more special flags are required for pthreads])
    flag=no
    case "${host_cpu}-${host_os}" in
        *-aix* | *-freebsd* | *-darwin*) flag="-D_THREAD_SAFE";;
        *solaris* | *-osf* | *-hpux*) flag="-D_REENTRANT";;
    esac
    AC_MSG_RESULT(${flag})
    if test "x$flag" != xno; then
        PTHREAD_CFLAGS="$flag $PTHREAD_CFLAGS"
    fi

    CFLAGS="$save_CFLAGS"
fi

AC_SUBST(PTHREAD_CFLAGS)
# Finally, execute ACTION-IF-FOUND/ACTION-IF-NOT-FOUND:
if test x"$z_check_pthread_ok" = xyes; then
        ifelse([$1],,AC_DEFINE(HAVE_PTHREAD,1,[Define if you have POSIX threads libraries and header files.]),[$1])
        :
else
        z_check_pthread_ok=no
        $2
fi
AC_LANG_POP([])
])
#end AC_DEFUN Z_CHECK_PTHREAD
Z_CHECK_PTHREAD(, [AC_MSG_ERROR(FastBit requires pthread support)])

# Does this compiler have built-in functions for atomic memory access?
AC_MSG_CHECKING([if compiler supports __sync_add_and_fetch for 32-bit integers])
AC_TRY_LINK(,
[
  #include <stdint.h>
  int32_t variable = 5;
  return (__sync_add_and_fetch(&variable, 3)
         && __sync_sub_and_fetch(&variable, 3)) ? 0 : -1;
],
[
  AC_MSG_RESULT([yes])
  AC_DEFINE(HAVE_GCC_ATOMIC32, 1, [Define to 1 if support of __sync_add_and_fetch() on 32-bit integers])
],
[
  # Retry with -march set for x86.
  old_CFLAGS="$CFLAGS"
  CFLAGS="$CFLAGS -march=i686"
  AC_TRY_LINK(,
  [
    #include <stdint.h>
    int32_t variable = 3;
    return (__sync_add_and_fetch(&variable, 2)
           && __sync_sub_and_fetch(&variable, 2)) ? 0 : -1;
  ],
  [
    AC_MSG_RESULT([yes])
    AC_DEFINE(HAVE_GCC_ATOMIC32, 1, [Define to 1 if support __sync_add_and_fetch() on 32-bit integers])
  ],
  [
    AC_MSG_RESULT([no])
    CFLAGS="$old_CFLAGS"
  ])
])
AC_MSG_CHECKING([if compiler supports __sync_add_and_fetch for 64-bit integers])
AC_TRY_LINK(,
[
  #include <stdint.h>
  int64_t variable = 7;
  return (__sync_add_and_fetch(&variable, 4)
         && __sync_sub_and_fetch(&variable, 4)) ? 0 : -1;
],
[
  AC_MSG_RESULT([yes])
  AC_DEFINE(HAVE_GCC_ATOMIC64, 1, [Define to 1 if support __sync_add_and_fetch() on 64-bit integers])
],
[
  # Retry with -march set for x86.
  old_CFLAGS="$CFLAGS"
  CFLAGS="$CFLAGS -march=i686"
  AC_TRY_LINK(,
  [
    #include <stdint.h>
    int64_t variable = 6;
    return (__sync_add_and_fetch(&variable, 2)
           && __sync_sub_and_fetch(&variable, 2)) ? 0 : -1;
  ],
  [
    AC_MSG_RESULT([yes])
    AC_DEFINE(HAVE_GCC_ATOMIC64, 1, [Define to 1 if support __sync_add_and_fetch() on 64-bit integers])
  ],
  [
    AC_MSG_RESULT([no])
    CFLAGS="$old_CFLAGS"
  ])
])
CFLAGS="$CFLAGS $PTHREAD_CFLAGS"
CXXFLAGS="$CFLAGS $PTHREAD_CFLAGS"

AC_DEFUN([AC_JNI_INCLUDE_DIR],[

JNI_INCLUDE_DIRS=""

case "$host_os" in
  darwin*) _JTOPDIR=`echo "$JAVA_HOME" | sed -e 's:/[[^/]]*$::'`
           _JINC="$_JTOPDIR/Headers";;
  *)       _JINC="$JAVA_HOME/include";;
esac
if test -f "$_JINC/jni.h"; then
  JNI_INCLUDE_DIRS="$JNI_INCLUDE_DIRS $_JINC"
else
  JAVA_HOME=`echo "$JAVA_HOME" | sed -e 's:/[[^/]]*$::'`
  if test -f "$JAVA_HOME/include/jni.h"; then
    JNI_INCLUDE_DIRS="$JNI_INCLUDE_DIRS $JAVA_HOME/include"
  else
    AC_MSG_ERROR([cannot find java include files])
  fi
fi

# system specific java includes
case "$host_os" in
  bsdi*)     _JNI_INC_SUBDIRS="bsdos";;
  linux*)    _JNI_INC_SUBDIRS="linux genunix";;
  osf*)      _JNI_INC_SUBDIRS="alpha";;
  solaris*)  _JNI_INC_SUBDIRS="solaris";;
  mingw*)    _JNI_INC_SUBDIRS="win32";;
  cygwin*)   _JNI_INC_SUBDIRS="win32";;
  *)         _JNI_INC_SUBDIRS="genunix";;
esac

# add all subdirectories
for JINCSUBDIR in $_JNI_INC_SUBDIRS
do
  if test -d "$JAVA_HOME/include/$JINCSUBDIR"; then
    JNI_INCLUDE_DIRS="$JNI_INCLUDE_DIRS $JAVA_HOME/include/$JINCSUBDIR"
  fi
done
])
#
AC_DEFUN([AC_PROG_JAVA_WORKS], [
AC_CHECK_PROG(uudecode, uudecode$EXEEXT, yes)
if test x$uudecode = xyes; then
AC_CACHE_CHECK([if uudecode can decode base 64 file], ac_cv_prog_uudecode_base64, [
dnl /**
dnl  * Test.java: used to test if java compiler works.
dnl  */
dnl public class Test
dnl {
dnl
dnl public static void
dnl main( String[] argv )
dnl {
dnl     System.exit (0);
dnl }
dnl
dnl }
cat << \EOF > Test.uue
begin-base64 644 Test.class
yv66vgADAC0AFQcAAgEABFRlc3QHAAQBABBqYXZhL2xhbmcvT2JqZWN0AQAE
bWFpbgEAFihbTGphdmEvbGFuZy9TdHJpbmc7KVYBAARDb2RlAQAPTGluZU51
bWJlclRhYmxlDAAKAAsBAARleGl0AQAEKEkpVgoADQAJBwAOAQAQamF2YS9s
YW5nL1N5c3RlbQEABjxpbml0PgEAAygpVgwADwAQCgADABEBAApTb3VyY2VG
aWxlAQAJVGVzdC5qYXZhACEAAQADAAAAAAACAAkABQAGAAEABwAAACEAAQAB
AAAABQO4AAyxAAAAAQAIAAAACgACAAAACgAEAAsAAQAPABAAAQAHAAAAIQAB
AAEAAAAFKrcAErEAAAABAAgAAAAKAAIAAAAEAAQABAABABMAAAACABQ=
====
EOF
if uudecode$EXEEXT Test.uue; then
        ac_cv_prog_uudecode_base64=yes
else
        echo "configure: __oline__: uudecode had trouble decoding base 64 file 'Test.uue'" >&AS_MESSAGE_LOG_FD
        echo "configure: failed file was:" >&AS_MESSAGE_LOG_FD
        cat Test.uue >&AS_MESSAGE_LOG_FD
        ac_cv_prog_uudecode_base64=no
fi
rm -f Test.uue])
fi
if test x$ac_cv_prog_uudecode_base64 != xyes; then
        rm -f Test.class
        AC_MSG_WARN([I have to compile Test.class from scratch])
        if test x$ac_cv_prog_javac_works = xno; then
                AC_MSG_ERROR([Cannot compile java source. $JAVAC does not work properly])
        fi
        if test x$ac_cv_prog_javac_works = x; then
                AC_PROG_JAVAC
        fi
fi
AC_CACHE_CHECK(if $JAVA works, ac_cv_prog_java_works, [
JAVA_TEST=Test.java
CLASS_TEST=Test.class
TEST=Test
changequote(, )dnl
cat << \EOF > $JAVA_TEST
/* [#]line __oline__ "configure" */
public class Test {
public static void main (String args[]) {
        System.exit (0);
} }
EOF
changequote([, ])dnl
if test x$ac_cv_prog_uudecode_base64 != xyes; then
        if AC_TRY_COMMAND($JAVAC $JAVACFLAGS $JAVA_TEST) && test -s $CLASS_TEST; then
                :
        else
          echo "configure: failed program was:" >&AS_MESSAGE_LOG_FD
          cat $JAVA_TEST >&AS_MESSAGE_LOG_FD
          AC_MSG_ERROR(The Java compiler $JAVAC failed (see config.log, check the CLASSPATH?))
        fi
fi
if AC_TRY_COMMAND($JAVA $JAVAFLAGS $TEST) >/dev/null 2>&1; then
  ac_cv_prog_java_works=yes
else
  echo "configure: failed program was:" >&AS_MESSAGE_LOG_FD
  cat $JAVA_TEST >&AS_MESSAGE_LOG_FD
  AC_MSG_ERROR(The Java VM $JAVA failed (see config.log, check the CLASSPATH?))
fi
rm -fr $JAVA_TEST $CLASS_TEST Test.uue
])
AC_PROVIDE([$0])dnl
]
)
AC_DEFUN([AC_PROG_JAVAC_WORKS],[
	AC_CACHE_CHECK([if $JAVAC works], ac_cv_prog_javac_works, [
	JAVA_TEST=Test.java
	CLASS_TEST=Test.class
cat << \EOF > $JAVA_TEST
/* [#]line __oline__ "configure" */
public class Test {
}
EOF
if AC_TRY_COMMAND($JAVAC $JAVACFLAGS $JAVA_TEST) >/dev/null 2>&1; then
  ac_cv_prog_javac_works=yes
else
  AC_MSG_ERROR([The Java compiler $JAVAC failed (see config.log, check the CLASSPATH?)])
  echo "configure: failed program was:" >&AS_MESSAGE_LOG_FD
  cat $JAVA_TEST >&AS_MESSAGE_LOG_FD
fi
rm -f $JAVA_TEST $CLASS_TEST
])
AC_PROVIDE([$0])dnl
])
AC_DEFUN([AC_PROG_JAVAC],[
	AC_REQUIRE([AC_EXEEXT])dnl
	if test "x$JAVAPREFIX" = x; then
        test "x$JAVAC" = x && AC_CHECK_PROGS(JAVAC, "gcj$EXEEXT -C" guavac$EXEEXT jikes$EXEEXT javac$EXEEXT)
	else
        #test "x$JAVAC" = x && AC_CHECK_PROGS(JAVAC, "gcj$EXEEXT -C" guavac$EXEEXT jikes$EXEEXT javac$EXEEXT, $JAVAPREFIX/javac$EXEEXT)
	JAVAC=$JAVAPREFIX/javac$EXEEXT
	fi
	test "x$JAVAC" = x && AC_MSG_ERROR([no acceptable Java compiler found in \$PATH])
	AC_PROG_JAVAC_WORKS
	AC_PROVIDE([$0])dnl
	])
AC_DEFUN([AC_PROG_JAVA],[
	AC_REQUIRE([AC_EXEEXT])dnl
	if test x$JAVAPREFIX = x; then
        test x$JAVA = x && AC_CHECK_PROGS(JAVA, kaffe$EXEEXT java$EXEEXT)
	else
        #test x$JAVA = x && AC_CHECK_PROGS(JAVA, kaffe$EXEEXT java$EXEEXT, $JAVAPREFIX/java$EXEEXT)
	JAVA=$JAVAPREFIX/java$EXEEXT
	fi
	test x$JAVA = x && AC_MSG_ERROR([no acceptable Java virtual machine found in \$PATH])
	AC_PROG_JAVA_WORKS
	AC_PROVIDE([$0])dnl
	])

# Set the optional Java SDK directory.
AC_ARG_WITH(java,
	    AS_HELP_STRING([--with-java=dir],[use dir as Java SDK root directory]),
            [if test -d $with_java -a -f $with_java/bin/java$EXEEXT; then JAVA_HOME=$with_java; fi],
	    [with_java="no"; JAVA_HOME="";])
  if test ! "x$with_java" = "xno" ; then
    if test "x$JAVA_HOME" = "x" ; then
    case "${host_os}" in
    # On Darwin the JDK, if present, is installed in /Library/Java/Home .
    darwin*)
      JAVA_HOME="/Library/Java/Home"
      ;;
    # On Fedora Core systems the JDK is usually in /usr/java/default .
    linux*)
      JAVA_HOME="/usr/java/default"
      ;;
    *)
    ;;
    esac
  fi

  if test ! "x$JAVA_HOME" = "x"
  then
    JAVAPREFIX="${JAVA_HOME}/bin"
    # Check for Java programs. Order here is important: check first
    # for the compiler.
    AC_PROG_JAVAC
    AC_PROG_JAVA

    if test ! "x$JAVAC" = "xno"
    then
      AC_JNI_INCLUDE_DIR
      for JNI_INCLUDE_DIR in $JNI_INCLUDE_DIRS
      do
        CFLAGS="$CFLAGS -I$JNI_INCLUDE_DIR"
        CXXFLAGS="$CXXFLAGS -I$JNI_INCLUDE_DIR"
      done

      AC_CHECK_HEADER(jni.h, [HAS_JNI=yes], [HAS_JNI=no])
    fi
  fi
fi
# build java test program if java and javac exist
AM_CONDITIONAL(BUILD_JAVA_TEST, test ! "x$JAVA" = "xno" &&  test ! "x$ac_cv_javac_supports_enums" = "xno")
AM_CONDITIONAL(BUILD_JAVA_INTERFACE, test ! "x$JAVAC" = "xno" &&  test "x$HAS_JNI" = "xyes")
AC_SUBST(BUILD_JAVA_INTERFACE)

# make sure FlexLexer.h is accessible
AC_CHECK_HEADER(FlexLexer.h, [], [CFLAGS="${CFLAGS} -I ${PWD}/win" CXXFLAGS="${CXXFLAGS} -I ${PWD}/win"])

AC_SUBST(CFLAGS)
AC_SUBST(CXXFLAGS)
AC_SUBST(LIB_VERSION_INFO)
#end stuff not generated by autoscan

AC_CONFIG_FILES([Makefile src/Makefile examples/Makefile tests/Makefile java/Makefile])
AC_OUTPUT
