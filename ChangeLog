2009-01-18 John Wu <John.Wu at ACM.org>
	* src/category.h, src/category.cpp: add ibis::text::selectLongs to
	extract the starting positions of the selected strings (so that
	the caller may read the string values directly)

2009-01-16 John Wu <John.Wu at ACM.org>
	* src/util.h: change ibis::util::counter to use GCC atomic
	extension as well
	* src/util.h: remove the unused member variable mesg from
	ibis::util::counter, add code to use interlocked variables in
	ibis::util::counter
	* src/util.h: change sharedInt template to two versions for
	uint32_t and uint64_t to take advantage of atomic functions
	available on windows under visual studio 9
	* src/fileManger.h, src/fileManager.cpp: remove countMutex,
	change totalBytes to be ibis::util::sharedInt64, change
	storage::nref from unsigned to ibis::util::sharedInt32
	* win/MinGW.mak: add case 10 to check-ibis

2009-01-15 John Wu <John.Wu at ACM.org>
	* src/util.h: add ibis::util::sharedInt template to make use of
	GCC extension for atomic operations on integers

2009-01-14 John Wu <John.Wu at ACM.org>
	* src/resource.h: separate the default constructor from the
	constructor that takes a string argument based on a suggestion
	from Niklas Bulitta.  Note that the function ibis::gParameter()
	only uses the default constructor.  Update the documentation of
	the functions in ibis::resource.
	* tests/Makefile.am: add test case 10 to check-ibis to exercise
	the new built-in tests for multi-threaded query evaluations

2009-01-13 John Wu <John.Wu at ACM.org>
	* src/part.h: start to implement a set of function that use a
	thread pool to answer different queries --
	ibis::part::buildQueryList and ibis::part::checkQueryList
	* src/part.cpp: rename ibis_part_startTests to
	ibis_part_threadedTestFun1, add ibis_part_threadedTestFun2 to
	process the list of queries generated by buildQueryList

2009-01-09 John Wu <John.Wu at ACM.org>
	* java/FastBit.java: change package name to be gov.lbl.fastbit,
	add FastBitJNI group to doxygen documentation
	* src/Doxyfile: add java/FastBit.java and the example files in
	examples to the list of source files
	* src/query.cpp:6584 add OPEN_FILEMODE as the 3rd argument to
	UnixOpen function call (an error spotted by Niklas Bulitta)
	* src/query.cpp:1712 add local static variable myhostid to cache
	the host ID instead of making the system call every time
	(suggested by Niklas Bulitta)
	* src/parth3d.cpp: add a variantion of get3DBins that returns
	bitmaps in container std::vector<ibis::bitvector*>.  Based on the
	timing measurements from Oliver, keeping empty bitmaps as nil
	pointers might be able to reduce the memory usage reduce overall
	execution time of get3DBins, especially if the majority of the
	bins are empty.
	* examples/ibis.cpp: add code in print3DDistributiion to test the
	new get3DBins that returns std::vector<ibis::bitvector*>

2009-01-08 John Wu <John.Wu at ACM.org>
	* win/MinGW.mak: add check-ibis
	* java/FastBit.java, java/FastBit.c: following a suggestion from
	Andrey Kolchanov <kolchanov at gmail.com> and placed JNI code in a
	package named gov.lbl.sdm

2009-01-07 John Wu <John.Wu at ACM.org>
	* win/MinGW.mak, win/Win.mak: update these make files for the two
	new source files
	* win/*.vcproj: include parth2d.cpp and parth3d.cpp in the
	VisualStudio project files

2009-01-06 John Wu <John.Wu at ACM.org>
	* src/parth2d.cpp, src/parth3d.cpp, src/parth.pp: split parth.cpp
	into three file to reduce the time needed for compilation
	* src, examples: change copyright year to include 2009

2009-01-05 John Wu <John.Wu at ACM.org>
	* src/util.h, src/util.cpp: add ibis::util::compactValue2 to
	compute the most compact binary value in a given range
	* examples/ibis.cpp: compute stride values in print2DDistribution
	and print3DDistribution using compact binary values to make the
	arithmetic computation less affected by rounding.  This is mostly
	to avoid visual mismatches, for example, the value 0.1 printed on
	screen is actually slightly larger than the precise value of 0.1
	inside the computer.  Given begin=0 and stride=0.1, one may expect
	the value 1.0 to be in bin 10, but it actually ends up in bin 9.
	The apparent unexpected placement of values can be to diagnose.

2009-01-02 John Wu <John.Wu at ACM.org>
	* src/array_t.cpp: in constructors assign m_begin to 0 in the
	initialization lists, assign values to m_begin in the constructor
	body after checking the values of actual
	* src/bitvector.cpp:393 add call to m_vec.nosharing() to
	ibis::bitvector::setBit (when a std::vector<ibis::bitvector> is
	resized, it creates multiple copies of a dummy bitvector)
	* src/parth.cpp: line 3011, vals2 should have been vals3, lines
	2987 and 2974, end2 should have been end3!
	* src/bitvector.cpp: count bitmaps as in decompressed state only
	if the m_vec contain some (> 0) bits -- this avoids the invocation
	of functions xx_c0 that assume the raw pointers can be used
	directly (in case of an empty m_vec, the raw pointer can not be
	used because it might be nil)
	* win/ibis.vcproj: add . to the include directories for the
	Release build

2008-12-26 John Wu <John.Wu at ACM.org>
	* examples/ibis.cpp: rename the existing print2DDistribution and
	print3DDistribution with ones that uses (begin, end, stride) to
	specify fixed bins -- to exercise the new get2DBins and get3DBins

2008-12-24 John Wu <John.Wu at ACM.org>
	* src/bitvector.cpp:4093 add statement to delete tmp, add call to
	compress and copy the resulting bit vector which typically reduces
	the memory usage
	* src/bitvector.cpp:4116 reorganize the triple-nested loop to
	reduce the number of temporary variables generated, add call to
	compress, and copy the result to reduce memory footprint held by
	the result bit vectors
	* src/parth.cpp in adaptiveIntsDetailed and adaptiveFloatsDetailed
	add function calls to compress the bit vectors generated from
	sumBits

2008-12-23 John Wu <John.Wu at ACM.org>
	* src/part.h: add get1DBins, get2DBins and get3DBins that takes
	(begin, end, stride) triples to define exact bin boundaries (a
	feature requested by Prabhat and Oliver Rubel)

2008-12-18 John Wu <John.Wu at ACM.org>
	* src/mensa.h, src/mensa.cpp, src/bord.cpp: add function dumpNames
	* examples/ibis.cpp: add outputnamestoo to capture the request to
	also output the column names in the output file
	* doc/ibisCommandLine.html: update the description of option
	-output to indicate the new variant -output-with-header
	* tests/Makefile.am: capitalize the word NOT to make failure
	messages stand out a little bit more
	* src/selectClause.h:72 add (required) return statement

2008-12-17 John Wu <John.Wu at ACM.org>
	* src/table.h, src/tab.h, src/bord.h: add function dumpNames to
	print a one-line header for CSV output

2008-12-9 John Wu <John.Wu at ACM.org>
	* src/ixbylt.cpp, src/ixfuge.cpp, src/ixfuzz.cpp: the function
	coarsen contains an incorrect test, the condition (ncoarse < 5 ||
	ncoarse <= nobs) should be (ncoarse < 5 || ncoarse >= nobs)
	* src: minor tinkering with the print-out (while debugging an
	application)

2008-12-4 John Wu <John.Wu at ACM.org>
	* win/Win.mak, win/MinGW.mak: update makefiles for Visual Studio's
	nmake and GNU make under MinGW/MinSYS
	* src/util.cpp: add conditional comiplation macro for MinGW32 in
	ibis::util::userName()

2008-12-1 John Wu <John.Wu at ACM.org>
	* README, win/README, tests/README: update the instructions
	following an inquiry from a new user

2008-11-28 John Wu <John.Wu at ACM.org>
	* src/category.cpp:201 incremented it by (newentry-1) instead of
	newentry
	* tests/readcsv.cpp: change header files to satisfy g++-4 under
	cygwin

2008-11-25 John Wu <John.Wu at ACM.org>
	* src/ibin.cpp:3850 make the lower bound larger to create more
	bins for larger values in log-scale -- this affects the case of
	indexing integer values as floating-point values and the minimum
	value is exactly 0, in which case the majority of the bin
	boundaries are less than 1 and useless
	* src/column.cpp:4696 add a statement in evaluateRange to clear
	the existing content of result variable (low), later statements
	depend on the size of this variable to determine what to do
	* configure.ac: update to autoconf 2.63
	* src/fileManager.cpp: in function unload, clean up the usage of
	variable sum, simplify the logic for determining what objects to
	remove.  The previous usage of sum is incorrect in the loop
	to free candiates.
	* src/fileManager.cpp: add call to sysctl on BSD flavored machines
	to find out the physical memory size
	* tests: completed more-check successfully on portnoy (FreeBSD),
	davinci(linux), data2 (linux), starsky(Darwin), and bit (cygwin)

2008-11-24 John Wu <John.Wu at ACM.org>
	* src/parth.cpp:3091 change "i > 1" to "i > 0" in
	ibis::part::get1DDistribution to fix an error in histogram
	computation found by Niklas Bulitta
	* src/parth.cpp:3102 change test to produce a tighter upper bound
	for the last bin boundary
	* src/part.cpp: add write lock to computeMinMax and buildIndex
	* examples/ibis.cpp:679 change ibis::gVerbose > 0 to
	ibis::gVerbose >= 0, to print selected values without requiring -v
	option
	* src/ifade.cpp, src/isapid.cpp, src/isbiad.cpp, src/islice.cpp:
	add cases to handle 6 more different types of integer values --
	fixes an error observed by Niklas Bulitta
	* tests/scripts/matchCounts.pl:45 change fgrep to egrep to catch
	a larger variety of error messages
	* tests/scripts/matchCounts.pl:38 convert all non-alphanumeric
	characters in query condition to underscore so that the backup
	file names may be acceptable on windows (under cygwin)
	* src/utilidor.cpp:1281 add definition for nelm (used in DEBUG
	code)
	* src/part.cpp:4535 removed invalid DEBUG code
	* src/whereLexer.ll:129 change STRSEQ to contain at least three
	strings (to avoid trouble with one- and two-argument functions),
	this also means that the string form of the 'IN' operator must
	have at least three strings on the right-hand side

2008-11-20 John Wu <John.Wu at ACM.org>
	* examples/ardea.cpp:696 separate out the default branch in
	parseNamesTypes to print a warning message (suggested by Niklas
	Bulitta)

2008-11-12 John Wu <John.Wu at ACM.org>
	* examples/ibis.cpp:1666 change == to !=, write output file if it
	is NOT /dev/null
	* tests/Makefile.am:57,59,61 modify tests to accommodate the new
	output format used by ibis.cpp (output from function tableSelect)

2008-11-10 John Wu <John.Wu at ACM.org>
	* examples/ibis.cpp: add calls to get2DBins and get3DBins in
	print2DDistribution and print3DDistribution as sanity check for
	these functions, add call to get1DBins in printColumn (Caution:
	due the different number of internal bins used, the function that
	retrieve the counts only, getxDDistributions, may not
	produce exactly the same output as those compute the bit vectors,
	getxDBins)
	* src/mensa.h: add default constructor to ibis::mensa
	* example/ibis.cpp: add function tableSelect to process queries
	using the select function of ibis::table interface (which can
	handle arithmetic expressions in the select clauses and combines
	answers from different data partitions)

2008-11-09 John Wu <John.Wu at ACM.org>
	* src/part.h, src/parth.cpp: add get1DBins, get2DBins, and
	get3DBins and supporting functions

2008-11-07 John Wu <John.Wu at ACM.org>
	* src/parth.cpp: move histogram functions from part.cpp to
	parth.cpp
	* src/index.h: swap two pairs of names, addBins and addBits,
	sumBins and sumBits in ibis::index; move functions addBits and
	sumBits into public scope
	* src/part.h, src/parth.cpp: add adaptiveIntsDetailed and
	adaptiveFloatsDetailed, change all adaptive binning templates to
	return long
	* src/util.h, src/bitvector.cpp: add two versions of function
	ibis::util::intersect, rename ibis::outProduct to be
	ibis::util::outerProduct

2008-11-06 John Wu <John.Wu at ACM.org>
	* src/part.cpp: add an element of 0 to bnds[123] to simplify the
	loops in ibis::part::adaptive3DBins, delete val2 in
	get2DDistribution, round up bin boundaries for integers in
	get2DDistribution and get3DDistribution, fix errors in
	get3DDistribution, make sure the bin boundaries does not round
	down to values that are included in the bin to its left (this
	could happen because the bin numbers are computed using the
	differences which could be smaller, when these differences are
	added back, the rounding may lead to smaller bin boundaries)
	* tests/Makefile.am: add test case check-ibis 9 to try out the 3D
	histogramming function

2008-11-05 John Wu <John.Wu at ACM.org>
	* examples/ibis.cpp: add statements to print out the return code
	in three functions that computes joint distributions
	* win: change the version numbers in the VisualStudio project
	files lower so it can work with the 2003 version
	* examples/ibis.cpp:505 missing col3 in the calling sequence of
	get3DDistribution

2008-11-03 John Wu <John.Wu at ACM.org>
	* examples/ibis.cpp:482 add print3DDistribution to exercise new
	functions in ibis::part
	* src/part.cpp:12186&12195 add statements to initialize counts
	array

2008-10-31 John Wu <John.Wu at ACM.org>
	* examples/ibis.cpp:2637 add check for the content of indexing
	option before changing the existing indexing option.  When the
	user supplied indexing option is different from what is in the
	data partition, remove the existing index files so that a fresh
	set of indexes are built.
	* src/part.h, src/part.cpp: add adpative binning version of
	get3DDistribution

2008-10-23 John Wu <John.Wu at ACM.org>
	* src/mensa.cpp: add statement to skip extra spaces and delimiters
	in ibis::table::parseNames
	* src/mensa.cpp: implement ibis::mensa::doSelect
	* src/part.cpp:16043 change ibis::part::barrel::read to use 8
	fixed-size integers instead of just "int" and "unsigned int"
	* src/qExpr.cpp:31 operator_name array missed "%" (for remainder)
	* tests/Makefile.am: add two test case under check-thula to
	exercise the new arithmetic expression handling in funct
	ibis::table::select

2008-10-22 John Wu <John.Wu at ACM.org>
	* src: unify the display of time duration to be "%g sec(CPU), %g
	sec(elapsed)"
	* examples/thula.cpp: modify it to use the new select function
	with arithmetic expressions
	* Makefile.am:12 add java/FastBit.java and java/milky.java for
	source tar distribution (an omission reported by Niklas Bulitta
	<officeman at freenet.de>)

2008-10-21 John Wu <John.Wu at ACM.org>
	* src/query.h: rename setTable to setPartition
	* src/query.cpp: change word "table" to "data partition" or "partition"
	* src/capi.h: adjust the LOGGER statements to make them line up
	nicer
	* src/menda.h: add doSelect to handle the non-trivial cases of
	selection

2008-10-20 John Wu <John.Wu at ACM.org>
	* src: add selectClause.cpp, selectClause.h, selectLexer.cc,
	selectLexer.h, selectLexer.ll, selectParser.cc, selectParser.hh,
	and selectParser.yy
	* configure.ac: add statements to check for the presence of
	FlexLexer.h

2008-10-02 John Wu <John.Wu at ACM.org>
	* src: move ibis::query::verifyPredicate to
	ibis::whereClause::verify, move ibis::query::addJoinConstraints to
	ibis::whereClause::amplify

2008-09-29 John Wu <John.Wu at ACM.org>
	* src: start using a new set of query parser for where clause: add
	whereClause.cpp, whereLexer.h; rename predicate.h -->
	whereClause.h, predicate.l --> whereLexer.ll predicate.y -->
	whereParser.yy, predicate.yy.cpp --> whereLexer.cc predicate.tab.h
	--> whereParser.hh, predicate.tab.cpp --> whereParser.cc

2008-09-29 John Wu <John.Wu at ACM.org>
	* src/qExpr.h, src/qExpr.cpp: move ibis::compRange::term and
	derived classes out of ibis::compRange and into ibis::math, change
	ibis::compRange::barrel to be ibis::math::barrel.

2008-09-26 John Wu <John.Wu at ACM.org>
	* src/qExpr.h, src/qExpr.cpp: add a new constructor of qAnyAny
	that takes a double value as the second argument, add proper
	prototype for operator<< that takes ibis::qExpr on the right-hand
	side, add detection of coma delimiter for unquoted strings in a
	sequence of strings in the constructor of qMultiString

2008-09-24 John Wu <John.Wu at ACM.org>
	* src/table.h, src/tab.h, src/bord.h, src/mensa.h: add an optional
	argument to ibis::table::dump that prints the first few rows of a
	table at the suggestion of David Kantowitz.

2008-09-22 David Kantowitz <dkantowitz at thinktradellc.com>
	* src/bord.h, src/bord.cpp: add derived version of getString to
	ibis::bord::column

2008-09-22 John Wu <John.Wu at ACM.org>
	* src/util.h, src/util.cpp, src/utilidor.h, src/utlidor.cpp: move
	the sorting function related to RIDSets to utilidor.h/cpp to limit
	the dependencies of util.h

2008-09-19 John Wu <John.Wu at ACM.org>
	* src/mensa.cpp:2275 add check to make sure the column type is not
	text or category, an error spotted by David Kantowitz <dkantowitz
	at thinktradellc dot com>
	* src/mensa.cpp:2504&2516 buffer[j].cval used as a pointer to
	std::vector<std::string>, but should be a pointer to ibis::column
	(more specifically ibis::text or ibis::category)

2008-09-17 John Wu <John.Wu at ACM.org>
	* src/part.cpp:11365 check whether the empty bins exist before
	adding new bin boundaries
	* win/*.vcproj: change _USRDLL to CXX_USE_DLL

2008-09-15 John Wu <John.Wu at ACM.org>
	* win: Update visual studio project files for the new Visual
	Studio 2008

2008-08-22 John Wu <John.Wu at ACM.org>
	* src/part.cpp: in adaptive2DBins, change the upper bound on the
	number of bins from 1000 to 2048 to tests used by Prabhat to run
	without surprises.  If a user asks for more than 2048 bins in each
	dimension, they will be reduced to limit the memory required for
	computing the fine bins
	* tests/Makefile.am: update test functions to exercise
	two-dimensional histogram functions, update expected output

2008-08-20 John Wu <John.Wu at ACM.org>
	* src/part.cpp: change ibis::part::adaptiveBins into two functions
	adaptiveInts and adaptiveFloats
	* src/part.cpp: implement two new get2DDistribution for computing
	2D histograms (both conditional and unconditional) based on the
	template function adaptive2DBins.  The new implementation avoids
	the binary look up used in the previous implementation.

2008-08-19 John Wu <John.Wu at ACM.org>
	* src/part.cpp: add get1DDistribution to compute conditional
	histograms with adaptive bins (supported with template function
	ibis::part::adaptiveBins)

2008-08-18 John Wu <John.Wu at ACM.org>
	* src/part.cpp: mark the functions that returns bins with open
	ends as deprecated

2008-08-15 John Wu <John.Wu at ACM.org>
	* src/mensa.cpp: cursor::dumpSome performed extra call to
	fillBuffers
	* doc/index.html, doc/dataLoading.html: add references to sample
	data

2008-08-14 John Wu <John.Wu at ACM.org>
	* src/table.h and friends: add function dump that only print the
	first few rows (to allow ardea.cpp to only print a few rows
	without reading all rows into memory)
	* src/mensa.h, src/mensa.cpp: change ibis::mensa::cursor to read a
	small number of rows into memory at a time (instead of always read
	a whole partition into memory as a time)
	* src/utilidor.cpp:1103 disable global optimization for
	ibis::util::sortStrings_partition when using MS VisualStudio

2008-08-13 John Wu <John.Wu at ACM.org>
	* examples/ardea.cpp:788 change "> 0" to "== 0" (intended to
	print only small tables, but existing condition got it wrong)

2008-08-12 John Wu <John.Wu at ACM.org>
	* src/utilidor.cpp:5 include typeinfo (NOTE: gcc 3.3.3 complains
	about the explicit instantiation of the function templates
	ibis::util::sortKeys)

2008-08-11 John Wu <John.Wu at ACM.org>
	* src/qExpr.cpp:2123 correct the loop that eliminates duplicate
	values (an error first encountered by Prabhat)
	* src: add doxygen groups FastBitIBIS, FastBitMain, and FastBitCAPI

2008-08-01 John Wu <John.Wu at ACM.org>
	* src/part.cpp: clean up the in-line documentation about various
	functions related to the computation of histograms.
	* src/part.cpp: change get2DDistributionD to get2DDistributionU
	* src/part.cpp: add get2DDistributionA and adapative2DBins to
	implement adapative binning with base data for get2DDistribution
	(without any condition)

2008-07-30 John Wu <John.Wu at ACM.org>
	* src/const.h:211-251 change the conditional compilation to more
	precisely manage the definitions of exact-width integer types --
	addressing a compatibility issue with VisIt encountered by Gunther
	Weber

2008-07-22 John Wu <John.Wu at ACM.org>
	* src, examples: remove some unused variables and functions

2008-07-18 John Wu <John.Wu at ACM.org>
	* src/ifase.cpp, src/isapid.cpp, src/isbiad.cpp, src/islice.cpp:
	add a local block to limit the scope of variable hst (histogram)
	to take advantage of the automatical deallocation.  Jochen has
	report a small memory leak in ibis::fade::construct2, which could
	be related to this

2008-07-01 John Wu <John.Wu at ACM.org>
	* src/mensa.cpp, src/bord.h: change precisions of ASCII
	representation of floats and doubles to 8 and 18 respectively
	(default is 6)
	* examples/ardea.cpp, examples/thula.cpp: change the output
	precisions of floats and doubles to match src/mensa.cpp
	* examples/ardea.cpp: change it to write data after reading each
	CSV file

2008-06-24 John Wu <John.Wu at ACM.org>
	* examples/thula.cpp: add option -x for exporting content of tables

2008-06-18 John Wu <John.Wu at ACM.org>
	* utilidor.cpp: add ibis::util::sort_heap to implement heap sort
	as the backup function for sort_quick (quick sort function), most
	the prototype information for most of the helper function for
	sorting into utilidor.cpp to hide them from the user

2008-06-17 John Wu <John.Wu at ACM.org>
	* array_t.h, array_t.cpp: add hsort (heap sort) and change qsort
	to make use of hsort at deep recursion level, set the maximum
	recursion depth to 20 in qsort
	* column.cpp:4674 add call to check the cost of using an index
	before actually use it

2008-06-06 John Wu <John.Wu at ACM.org>
	* utilidor.h, utilido.cpp, join.h, joinin.h, joinin.cpp: add files
	that performs radix sort and in-memory equi-join from the branch
	ibis-branch-080429
	* src/Makefile.am:5 change versioninfo to version-info
	* tests/Makefile.am:44 change option -j to -y to match with the
	new ibis.cpp
	* src/ixfuge.cpp, src/ixfuzz.cpp, and src/ixbylt.cpp: add code to
	ensure the number of coarse bins is not more than the number of
	distinct values (bins)
	* Makefile.am, tests/Makefile.am: change quick-check to check, and
	check to more-check, so the default check does a minimal amount of
	testing as not to surprise the user with the excessive long run
	time on some platfoms

2008-06-05 John Wu <John.Wu at ACM.org>
	* src/part.cpp: lines 1341 and 1342 are swapped (a bug reported by
	Xufei Qian of SDSC)

2008-06-04 John Wu <John.Wu at ACM.org>
	* src/query.cpp: change ibis::query::evaluate and
	ibis::query::computeHits to accept empty where clause when the
	select clause is specified
	* example/ibis.cpp: accept query string without a where clause if
	it has a select clause (request from Ross Bates)

2008-05-29 John Wu <John.Wu at ACM.org>
	* src/colValues.h: add function nosharing to ibis::colValues.
	This addresses a problem reported by Ross Bates.  When all records
	are selected, the previous code attempts to sort an array that was
	based on a read-only memory map.
	* src/bundle.cpp: add calls to ibis::colValues::nosharing before
	sorting the bundles

2008-05-27 John Wu <John.Wu at ACM.org>
	* src/util.cpp:882: add the case of using getpwuid back to
	function ibis::util::userName.  Ross Bates just pointed out that
	the function getlogin requires an actual login session (as
	indicated by the presence of a utmp entry or a TTY).  The function
	getlogin fails with a segfault if it is not able to determine the
	TTY or utmp entry.

2008-05-22 John Wu <John.Wu at ACM.org>
	* src/ibbylt.cpp, src/ixfuzz.cpp, src/ixfuge.cpp: change the
	default value computation for ncoarse to use the one with smaller
	objective function value (rather than rounding the analytical
	expression).  This produces a more stable default value especially
	when the number of coarse bins is small.

2008-05-15 John Wu <John.Wu at ACM.org>
	* src/ixbylt.cpp, src/ixfuge.cpp, src/ixfuzz.cpp: change the
	default number of coarse bins (ncoarse) to make use of the coarse
	level index size, previous default values assume uniform random
	data, the new default values only assume the coarse level will be
	uncompressible, which is more general
	* tests/Makefile.am: change quick-chek to make sure the TESTDIR is
	cleared first, change the word 'failed' to 'did not pass' to make
	the message longer and stand out more

2008-05-15 John Wu <John.Wu at ACM.org>
	* src/ixbylt.cpp: add code to read option ncoarse in index
	specification, change default ncoarse to 31 based on the
	heuristics of neutral space-time trade-off
	* src/ixfuge.cpp:715, src/ixfuzz.cpp:135, change default ncoarse
	to 44 based on the heuristics of neutral space-time trade-off
	* src/ixpack.cpp: change the default number of coarse bins to 31

2008-04-30 John Wu <John.Wu at ACM.org>
	* src/joinin.cpp: complete initial implementation of ibis::joinIN
	* examples/ibis.cpp: change the operation delete row to use -yank,
	add -join to test the class ibis::joinIN
	* src/Makefile.am: add entries for the new files, utilidor.cpp,
	joinin.cpp, utilidor.h, joinin.h and join.h

2008-04-29 John Wu <John.Wu at ACM.org>
	* src/utilidor.h, src/utilidor.cpp: separate the sorting functions
	in namespace ibis::util from joinin.cpp and array_t.cpp.  Timing
	measurements show that the radix sort is the most efficient if
	there are more than a few thousand elements in the array to be
	sorted.  Change ibis::util::sort to ibis::util::sortall because it
	sorts all arrays passed to it.  Rename the newer sorting function
	to be ibis::util::sortkeys because they only sort according to the
	arrays keys.
	* *: create new tag on trunk (ibis-base-080429) and a new branch
	ibis-branch-080429, discard the branch b093pre-addjoin
	* src/utilidor.cpp: implement ibis::util::sortMerge
	* src/joinin.cpp: implement ibis::joinIN::evaluate

2008-04-27 John Wu <John.Wu at ACM.org>
	* src/joinin.cpp: add radix sort functions

2008-04-28 John Wu <John.Wu at ACM.org>
	* examples/ibis.cpp:2240 add code to match the SQL patterns in
	data partition names (a feature that was promised in
	ibisCommandLine.html but was lost somehow)
	* src/query.cpp: add function ibis::util::nameList::add
	* src/mensa.h: add function select2
	* src/util.cpp: change ibis::util::strMatch to be case insensitive
	* examples/thula.cpp: add option -f requested by Jon Strabala

2008-04-26 John Wu <John.Wu at ACM.org>
	* src/part.h: change ibis::util::tablesFrom??? to return the
	number of new partition they create
	* src/table.h: add function addPartition
	* src/mensa.cpp: add function addPartiton
	* src/query.cpp:199 add statements to delete dslock in
	ibis::query::setTable

2008-04-16 John Wu <John.Wu at ACM.org>
	* tests/Makefile.am: add test case 3 to check-text to exercise the
	operator IN

2008-04-15 John Wu <John.Wu at ACM.org>
	* src/bitvector.cpp: replace calls to append individual bits with
	appendFill in function erase
	* src/util.cpp: change conditional compilation instruction for
	using getlogin_r in userName
	* src/bitvector.cpp:2129 remove extra conditions in the if statement
	* src/bitvector.h: in copy_runs and copy_runsn, change the code to
	not use it.nWords in cases where it.isFill is not true
	* src/bitvector64.h: change copy_runs and copy_runsn to no use
	it.nWords when it.isFill is 0
	* src/ifade.cpp, src/irelic.cpp, src/isapid.cpp, src/isbiad.cpp,
	src/islice.cpp: locate(vals[i]) should be locate(varr[i]) in
	functions that process ibis::qDiscreteRange (an error first
	reported by Prabhat)

2008-04-11 John Wu <John.Wu at ACM.org>
	* src/bitvector.h: add function empty

2008-04-10 John Wu <John.Wu at ACM.org>
	* src/irelic.cpp: update a number of implementation if
	read(ibis::fileManager::storage*) to remove the statements that
	deletes str -- this should not have been done

2008-04-04 John Wu <John.Wu at ACM.org>
	* src/table.h, src/tafel.h, src/tafel.cpp: add function clearData
	* src/qExpr.cpp:2111 add check to see if the array is sorted
	before calling the sorting function

2008-04-02 John Wu <John.Wu at ACM.org>
	* src/index.cpp:3358 need to resize bdry before assignments
	* src/qExpr.cpp:1367 check expr->left and expr->right

2008-04-01 John Wu <John.Wu at ACM.org>
	* src/util.cpp: change userName to use getlogin_r as the primary
	method
	* src/category.cpp: change the starting positions of strings from
	type long to type int64_t, make it possible to remove explicit
	instantiation of array_t<long>, which may conflict with other
	explicit instantiations

2008-03-31 John Wu <John.Wu at ACM.org>
	* src/fileManager.cpp: add new lines between some consecutive
	printing statements
	* examples/ibis.cpp: treat multiple printing options specified on
	command line independently, previously they are combined into one
	operation
	* src/part.cpp: in get2DDistributionD, refine the computation of
	stride1 and stride2 for integer values

2008-03-30 John Wu <John.Wu at ACM.org>
	* src/index.cpp:3700 add test to ensure avg is not assigned 0
	becasuse it is used in divisions later
	* src/util.cpp:973 change && to || in the conditions

2008-03-26 John Wu <John.Wu at ACM.org>
	* src/column.h: add keyword virtual to ibis::column::getActual???
	to allow FastQuery to override them
	* src/part.cpp: add setprecision(18) to the queries conditions
	genereated by various getxDDistribution functions.  A problem
	first observed by Prabhat.
	* src/index.cpp: change decisions to use the priority queue to
	put the number of bitmaps through the function square instead of
	log.  This improves the performance in a project with Prabhat.

2008-03-24 John Wu <John.Wu at ACM.org>
	* src/util.h: add ibis::util::timer class to print out timing
	information in a fixed format, try the first case in
	ibis::bin::binOrderT
	* src/Doxyfile:1008 add FASTBIT_CXX_DLLSPEC to PREDEFINED, change
	EXTRACT_ALL back to NO

2008-03-23 John Wu <John.Wu at ACM.org>
	* src/part.cpp: remove the call to function std::floor before
	calling static_cast<uint32>
	* src/array_t.cpp:248 check for empty array before continuing
	* src/array_t.cpp:275 add check for empty array and array of
	size 1

2008-03-22 John Wu <John.Wu at ACM.org>
	* src/qExpr.cpp: add more cases to ibis::qExpr::simplify, to
	enable merging of simple range conditions right next to each other

2008-03-21 John Wu <John.Wu at ACM.org>
	* examples/ibis.cpp: update the use of LOGGER macro to match the
	new definition -- fix error in test cases check-ibis 7 and 8
	* tests/Makefile.am: change check-text to redirect normal output
	from ibis to /dev/null so as to not cluter the output
	* src/index.h: change most of the pure virtual functions in
	ibis::index to have a default implementation so as to minimize the
	required functions to be implemented by a derived class
	* src/part.h:312 add an optional argument to get2DDistribution to
	let the caller choose whether to use the indexes or base data,
	requested by Prabhat
	* src/index.h: change functions read and write to return int
	instead of void
	* src/qExpr.h: rewrite the function reduce to absorb consecutive
	pairs of cos and acos, sin and asin, tan and atan.

2008-03-20 John Wu <John.Wu at ACM.org>
	* src/column.cpp:3899 modify the decision on when to use unix read
	operationis to invoke them if only a few seeks are needed.  This
	should reduce the time needed for operations that only require a
	small number of values from a large dataset.  Previous decision
	relies more in the file mapping mechanism.
	* src/column.cpp: update functions selectTypes to use the new
	selectValues function
	* src/irelic.cpp:556 move the assignment of nrows to the beginning
	of the function to ensure all subsequence function can access the
	the correct value
	* src/ibin.cpp:852,903,2574 add assignment of nrows, without them
	the function ibis::index::optionalUnpack will make the wrong
	decision in some cases (a buf encountered by Prabhat)
	* doc/indexSpec.html: change < and > to &lt; and &gt; in sample
	index specifications
	* src/part.cpp: introduce more rnadomness to the test queries by
	using ibis::util::compactValues in generating intermediate query
	boundaries

2008-03-19 John Wu <John.Wu at ACM.org>
	* util.h:170 change LOGGER macro to take a logical expression
	instead of an integer, this make the dependency on ibis::gVerbose
	explicit

2008-03-18 John Wu <John.Wu at ACM.org>
	* src/part.h, src/part.cpp: add explicit template instantiation
	of ibis::part::equalWeightBins for float and double, attempting to
	reduce the time and memory needed to generate equal-weight bins
	* src/array_t.h, src/array_t.cpp: add a new sorting function
	ibis::util::sort to sort two arrays together
	* src/part.cpp: add calls to ibis::util::sort to sort values
	before counting 2D bins (attempting to improve efficiency for
	get2DDistribution)

2008-03-18 Matthias Vallentin <vallentin at icsi.berkeley.edu>
	* src/column.cpp:15 include <typeinfo>

2008-03-17 John Wu <John.Wu at ACM.org>
	* src/query.cpp:4168 limit the number of values to be printed
	* win/tcapi.vcproj: add macro _USRDLL, make sure all Debug versions
	of the projects compile code with full buffer check
	* const.h: redefine FASTBIT_DLLSPEC to FASTBIT_CXX_DLLSPEC, change
	DLL library to only export C API -- did not fix the problem with tcapi

2008-03-16 John Wu <John.Wu at ACM.org>
	* src/part.cpp:3618 initialize ierr to 0 (fix a run-time error
	reported by VisualStudio)
	* src/const.h:274 make sure PTHREAD_RWLOCK_INITIALIZER is not
	defined before defining it on Mac (problem reported by Matthias
	Vallentin)
	* src/util.h:14 check for the inclusion of stdlib.h for all known
	unix type of systems (problem reported by Matthias Vallentin)

2008-03-14 John Wu <John.Wu at ACM.org>
	* tests/Makefile.am: update the definition of test case 7 and 8
	for check-ibis to correct failure of these test cases, remove
	match-counts from large-tests (unnecessary because it is already
	run under the normal check)
	* win/ibis.sln: enable assembly debugging of DLL project in Debug
	mode

2008-03-13 John Wu <John.Wu at ACM.org>
	* src/qExpr.h:302 change the construct of qDiscreteRange that
	takes an array of doubles to sort the incoming values and remove
	duplicates
	* win/ibis.sln: change visual studio solutioni file to build dll
	and trydll by default in both Debug and Release mode
	* win/java.vcproj: failed to compile because of missing
	DLL_EXPORTS macro (problem reported by Mark Sordo)
	* src/query.h:286 remove static private member variable purgeFiles
	* src/util.h: remove static private memeber variable delimiters
	from ibis::selected and ibis::nameList, replace it with
	ibis::util::delimiters
	* src/query.cpp: change ibis::nameList and ibis::selected to use
	ibis::util::delimiters
	* src/part.cpp: adjust the printing statements in various
	histograming functions to make them produce timing information
	when ibis::gVerbose is larger than 0
	* src/part.cpp: add a query involving arithmetic expression in
	ibis::part::quickTest, to check for a problem encountered while
	running the JNI test program
	* tests/scripts/query-count.list: changed four expressions to use
	some arithmatic functions

2008-03-12 John Wu <John.Wu at ACM.org>
	* src/part.cpp: replace the calls to bitwise AND operator with the
	new count function in get2DDistributionI
	* src/query.cpp: do not generate the query string from an
	explicitly set query expression, add code to check for null
	condition string in printing statements, change SET_PREDICATE
	condition to base on whether member variable is a valid pointer.
	This is to accommodate the situation where Prabhat and Oliver sets
	a range condition with thousands of values of are requested in one
	query expression.
	* src/bitvector.cpp: lines 856 and 860 swapped, similarly, lines
	660 and 664 in src/bitvector64.cpp are also swapped.  This errors
	causes the variable nbits to be computed incorrectly, which can in
	turn cause other problems later.  This was the cause of a problem
	noticed by Prabhat.
	* src/query.cpp, src/column.h, src/part.h: replace @pre with @code
	and @endcode pairs
	* src/query.cpp:2878 remove the statement, it assumes the wrong
	return value

2008-03-11 John Wu <John.Wu at ACM.org>
	* src/part.h, src/part.cpp: add a new variation of
	get2DDistribution that computes equal-weight bins for a 2D
	histogram with specified number of bins as requested by Prabhat
	and Oliver
	* examples/ibis.cpp: modify print function to exercise the new
	get2DDistribution function
	* src/bitvector.h, src/bitvector.cpp: add function to count the
	number of bits that are 1 for two bitvectors.  This function can
	be used to by-pass the need to first compute a bitwise logical AND
	operation and reduce the time needed to compute histogram through
	bitmap indexes

2008-03-10 John Wu <John.Wu at ACM.org>
	* src/Doxyfile: change EXTRACT_ALL to YES, removed invalid command
	endpre from column.h, part.h, and query.cpp

2008-03-09 John Wu <John.Wu at ACM.org>
	* src/imesa.cpp:26 move variable b2 outside of the try-block so it
	can be used in the catch-block to clean up the bitvectors it held
	* src/isbiad.cpp: add try-catch-block to free array beq in both
	sbiad::construct1 and sbiad::construct2, this avoids memory leaks
	in case of exceptions

2008-03-08 John Wu <John.Wu at ACM.org>
	* src/index.cpp, src/ixbylt.cpp, src/ixfuzz.cpp, src/ixzona.cpp,
	src/ixfuge.cpp: add logging function calls to print out the
	progress information to help debugging
	* src/ixbylt.cpp, src/ixfuzz.cpp, src/ixzona.cpp, src/ixfuge.cpp:
	the two argument version of activateCoarse contain if-test on
	bits[i] == 0, but they should have been cbits[i] == 0.  This
	causes the two-level bitmap indexes to compute wrong answers in
	some cases, especially in large selt tests where bits[i] is more
	likely to have been used before.  In which case, cbits[i] will not
	be activated.  On the other hand, if bits[i] was never used
	(remaining 0), then it is possible for cbits[i] to be activated
	multiple times.  Each time during the activation, it also acquires
	a read lock on the file, however, it is only destroyed once which
	release the lock on the file once.  Therefore, it is possible for
	read locks on the index file to be left intact after the program
	completes.  This causes the clean up function in the file manager
	to fail to acquire a write lock and hung forever.

2008-03-07 John Wu <John.Wu at ACM.org>
	* src/part.cpp: change get2DDistributionI and coarsenBins to
	bypass the ibis::query layer to directly use the index object for
	query evaluations, add a try-catch block in get2DDistribution to
	clean up after the array of pointers to bitvectors
	* src/index.cpp: add more functions to print progress messages (to
	help with debugging the deadlock at the clean up stage, bug 8)
	* src/ixbylt.cpp, src/ixfuzz.cpp, src/ixzona.cpp, src/ixfuge.cpp:
	change remaining unsigned types to uint32_t in variables written
	to or read from files

2008-03-06 John Wu <John.Wu at ACM.org>
	* examples/ibis.cpp: add a function (getJointDistribution) to
	excercise the new get2DDistribition
	* src/part.cpp: add calls to timing functions and logging
	functions in ibis::part::get2DDistributionI and get2DDistributionD

2008-03-05 John Wu <John.Wu at ACM.org>
	* src/column.h, src/column.cpp: change dataFileName and
	nullMaskName to return the file names in std::string instead of
	raw char*
	* src/column.h, src/column.cpp: add function indexSize
	* src/part.h, src/part.cpp: add function get1DDistribution and
	get2DDistribution with support functions to compute the histograms
	with the specified number of bins by using either the indexes or
	the base data depending on which are smaller (Requested by Probhat
	and Oliver)

2008-03-04 John Wu <John.Wu at ACM.org>
	* src/column.cpp: change ibis::column::loadIndex to modify the
	in-memory version index specification for the column to prevent it
	from trying to build an index again in the same run.  The
	configuration parameter "disableIndexOnFailure" affects whether
	the new index specification is written down to the metadata file
	-part.txt.
	* Makefile.am, tests/Makefile.am: reorganize the top-level targets
	for checking the correctness of FastBit into three levels of
	thoroughness: quick-check, check, and full-check.  Note:
	full-check replaces the earlier target check-all.

2008-03-03 John Wu <John.Wu at ACM.org>
	* src/bitvector.cpp:261 throw ibis::bad_alloc exception instead of
	just printing a warning message in case of memory allocation
	failure
	* src/array.h:107 add function incore to tell caller whether the
	content of the array is in memory
	* src/bitvector:159 add check in ibis::bitvector::compress to not
	attempt to compress bitvector not in memory.  Because the file
	associated with the array was opened read-only, modifying it will
	cause segmentation fault.
	* src/tafel.cpp: modify appendRow and readCSV to allow the caller
	to completely override the default delimiters (in response to
	question from Devin McNamara)
	* examples/ardea.cpp: add option -b to accept user to pass in a
	set of breaks (or more commonly known as delimiters) for the text
	file/lines to be parsed
	* src/ibin.h: add destructor to ibis::bak::grain and
	ibis::bak2::grain
	* src/util.h: delete getBuffer, add ibis::util::buffer, replace
	all calls to getBuffer to a buffer object.  This should provide
	better buffer management than using raw pointer.
	* src/mensa.h:271 explicitly case col to use ibis::text::getString
	(same problem as reported by Ross Bates <rbates@gmail.com>)
	* src/idirekte.cpp: use mask to limit the number of elements
	examined in function ibis::direkte::construct
	* src/tafel.cpp: add check for '/' in ibis::tafel::write to remove
	the possbility of having a data partition name starting with '/'
	* tests/Makefile.am: add target test-text to check for categorical
	values to always check for the problem reported by Ross

2008-03-02 John Wu <John.Wu at ACM.org>
	* src/colValues.h: combines the cases for ibis::CATEGORY and
	ibis::text, remove the previous code for ibis::CATEGORY that
	returns null string (problem reported by Ross Bates
	<rbates@gmail.com>)
	* src/column.h:109 remove getString that returns char*, no longer
	used
	* src/category.h: add ibis::category::getString
	* tests/Makefile.am: add -z option to ibis commands with -b option
	* src/column.cpp:4375 check that idx is a valid pointer before
	using it  (a problem revealed with make check-all, which involves
	tests cases of relatively large datasets but a very restrictive
	memory upper bound)

2008-02-29 John Wu <John.Wu at ACM.org>
	* src/part.cpp: fix count2DBins and count3DBins had logical
	problems

2008-02-22 John Wu <John.Wu at ACM.org>
	* src/Doxyfile:1008 enable PREDEFINED macro expansion to make sure
	FASTBIT_DLLSPEC is blank so that doxygen can process the file
	correctly
	* src/bitvector.cpp: update the documentation of bitwise logical
	operations.

2008-02-21 John Wu <John.Wu at ACM.org>
	* src/part.cpp:4639 remove calls to function flushDir, then
	require a mutex lock on the file manager can cause deadlock
	* src/column.cpp: in evaluateRange, limit the scope of indexLock
	to reduce the chance of deadlock (when memory is running low)
	* src/column.h: add softWriteLock class to try to acquire lock
	when possible -- used in ibis::column::unloadIndex.  While working
	with an index (i.e., holding a read lock), it may be necessary to
	free some memory, which can invoke the unloadIndex function.
	Changing to a soft write lock would allow the invocation to
	complete and avoid deadlock.

2008-02-20 John Wu <John.Wu at ACM.org>
	* src/ifade.cpp:69&74 correct the offset set calculations, was
	only counting two leading integers.  This causes crashes when
	multi-level range and interval encodings are used without binning
	* src/part.cpp:5869 wrong formula for variable j -- this is
	probably the real cause of the problem observed by Jochen on Feb
	18
	* src/part.cpp: in queryTest and quickTest, call unloadIndex if
	query::evaluate returns an error
	* src/ibin.cpp: modify ibis::bin constructors to consistently fill
	the content of array offsets, ibis::fuge depends on this

2008-02-19 John Wu <John.Wu at ACM.org>
	* Makefile.am, tests/Makefile.am: change target all-tests to
	check-all and have it include both small and large tests
	* src/column.h: remove mutex lock from ibis::column::indexLock
	class, having it causes deadlocks when multiple threads tries to
	access the same index.

2008-02-18 John Wu <John.Wu at ACM.org>
	* src/column.cpp: add try-catch blocks in the error-handling code
	of ibis::column::evaluateRange (attempt to address problems
	observed by Jochen on Feb 18)
	* tests/Makefile.am: add test cases in large-sanity-check to limit
	the memory usage during build-in tests

2008-02-17 John Wu <John.Wu at ACM.org>
	* src/part.cpp: add try-catch block in selectInts, selectUInts,
	selectLongs, selectFloats, and selectDoubles to address the
	seg fault reported by Jochen on Feb 16.
	* src/query.cpp: update the use of variable newlock to make them
	more consistent across functions

2008-02-14 John Wu <John.Wu at ACM.org>
	* src/part.h, src/part.cpp: change <size_t> to <uint32_t> for
	get[1|2|3]DDistribution and supporting functions (requested by
	Prabhat)
	* src/bord.cpp, src/mensa.cpp: update to accomodate the changes to
	get[1|2|3]DDistribution

2008-02-14 John Wu <John.Wu at ACM.org>
	* src/part.cpp: change doScan and doCompare to return long
	* src/part.cpp:2890&2911 change calls to doIntCompare to
	doCompare<int64_t> and doCompare<uint64_t>
	* src/part.h, src/part.cpp: replace comparison functions for
	specific element types with the template functions
	* src/part.cpp:10486&10695: arguments constraints and name were in
	wrong order (problem first reported by Mr. Prabhat)
	* src/column.h: add virtual keyword to selectBytes and friends
	* src/part.cpp: check the return values of selectBytes and friends
	in getDistribution and varients
	* tests/test0.csv, tests/test1.csv: add decimal points to induce
	readcsv.cpp to interpret some columns as double.  This introduces
	one more type of data tested by the automatic test program
	* examples/ibis.cpp:223 swap cname and cond
	* tests/hist0, tests/hist1: add two files for testing
	histogramming functions
	* tests/Makefile.am: add two test cases under check-ibis to test
	histograming functions

2008-02-12 John Wu <John.Wu at ACM.org>
	* src/part.cpp:2815 add return value -4 when elementSize() is not
	a positive number
	* src/category.cpp, src/column.cpp, src/ibin.cpp, src/icegale.cpp,
	src/ifade.cpp, src/imesa.cpp, src/irange.cpp, src/ixambit.cpp,
	src/ixpack.cpp, src/ixpale.cpp, src/part.cpp: capture the return
	value of call to UnixSeek in an attempt to prevent a segementation
	fault encounted by Jochen who removes the base data files

2008-02-06 John Wu <John.Wu at ACM.org>
	* src/ibin.cpp: change all decisions regarding when to use
	single-valued bins to use than when there are number of distinct
	values is no more than 3/2 of specified bins.

2008-02-04 John Wu <John.Wu at ACM.org>
	* src/qExpr.cpp:1314-1318 comment out the section that converts a
	discrete range into a set of continuous ranges
	* src/index.h:192 add function evaluate for ibis::qDiscreteRange
	* src/part.h, src/column.h, src/part.cpp, src/column.cpp: add
	function to evaluate qDiscreteRange
	* tests/scripts/query-count.list:28&29 modified queries to use
	long lists
	* src/ibin.cpp:3467 col->type() == ibis::DOUBLE should be
	col->type != ibis::DOUBLE; update the block to produce at least
	one bin boundary per inner loop

2008-01-25 John Wu <John.Wu at ACM.org>
	* src/idirekte.cpp:482&483 add conditions to prevent casting
	negative floarting-point numbers to unsigned integers
	* tests/scripts/query-count.list: modify some of the 0 query
	boundaries to be negative numbers to exercise the above fix

2008-01-23 John Wu <John.Wu at ACM.org>
	* src/ibin.cpp:3929 add fudge factor of 3/2 to allow 50% more bins
	than specified when it can put each value in its own bin.  A user
	was specifying nbins=72 for a variable with 73 distinct values,
	and was confused about why FastBit put two values in the same
	bin.  This should avoid that type of situation.
	* src/index.cpp:534&841 add additional condition to make sure when
	ibis::index::create invokes ibis::direkte, the actual minimum is
	not a negative number.  In a case where the user specified
	minimum=0, but the actual minimum is -1, FastBit crashes when
	building an index

2008-01-16 John Wu <John.Wu at ACM.org>
	* src/column.cpp:4412 remove the line that assigns ierr from low.cnt()

2008-01-16 Jochen Schlosser <schlosser at zbh.uni-hamburg.de>
	* src/part.cpp:2791 add 'delete [] file;' before return statement,
	fix memory leak.  The problem is that the pointer returned by
	dataFileName is not deleted before exiting the function.  The same
	problem appears in a number of different places in src/part.cpp,
	src/parti.cpp and src/party.cpp.

2008-01-15 John Wu <John.Wu at ACM.org>
	* src/column.cpp: in column::evaluateRange, add better detection
	for the need of invoking doScan, add print statements
	* src/array_c.cpp: add statements to check for nil pointers in all
	constructors
	* src/fileManager.cpp: add statements to prevent printStatus from
	dereferencing nil pointers

2008-01-14 John Wu <John.Wu at ACM.org>
	* src/query.cpp: the return values of a few calls to
	ibis::part::doScan did not get passed back to the caller

2008-01-08 John Wu <John.Wu at ACM.org>
	* src/column.cpp: comment out most of the calls to purgeIndexFiles
	* src/part.cpp: add checks for the existence of raw data file before
	attempting to scan the values
	* src/query.h and src/query.cpp: add functioins to accept new
	forms of query conditions, allow return values to propergate from
	ibis::part and ibis::column functions to ibis::query::evaluate
	* examples/ibis.cpp: add code to check the return values of
	ibis::query::estimate and ibis::query::evaluate

2007-12-22 John Wu <John.Wu at ACM.org>
	* util.h: add explicit O_BINARY in the macros for file modes,
	without this option, the files are opened in text-mode under MinGW
	following the default on MS Windows systems (there are already
	explicit calls to _setmode under MS Visual Studio environment).
	* util.cpp:104 add execute bit to the mode for the directory
	created by ibis::util::makeDir, a recent change has messed this
	one up

2007-12-20 John Wu <John.Wu at ACM.org>
	* add FASTBIT_DLLSPEC to table.h, remove FASTBIT_DLLSPEC from
	explicit instantiation of array_t
	* update win/Win.mak and win/MinGW.mak to add dependcies for
	trydll.cpp

2007-12-14 John Wu <John.Wu at ACM.org>
	* add documentation to ibis::qContinuousRange

2007-12-14 John Wu <John.Wu at ACM.org>
	* change all DLLSPEC to FASTBIT_DLLSPEC
	* add win/MinGW.mak to compile under MinGW/MSYS with GNU g++

2007-12-12 John Wu <John.Wu at ACM.org>
	* add DLLSPEC to classes part, part::info, quey, query::result,
	all members of ibis::bundle hierarchy and many more
	* add win/trydll.cpp to test the new DLL library

2007-12-11 John Wu <John.Wu at ACM.org>
	* src/part.cpp:908 update the names used in readMeshShape to match
	those in readTDC
	* src/ibis.h: correct typos in the doxygen documentation

2007-12-10 John Wu <John.Wu at ACM.org>
	* src/capi.h:209 partitioin -> partition
	* examples/tcapi.h:56 missed dir (to match %s in fprintf)

2007-12-6 John Wu <John.Wu at ACM.org>
	* change all LOGGER(ibis::gVerbose) to LOGGER(0)
	* const.h:252 & 254 -- add definition of DLLSPEC
	* capi.h:46-54 -- add macro DLLSPEC because it does not include const.h

2007-10-29 John Wu <John.Wu at ACM.org>
	* src/index.cpp:539&846: switch > to <

2007-10-25 John Wu <John.Wu at ACM.org>
	* src/meshQuery.*: change getHitsAsRanges to getHitsAsBlocks

2007-10-24 John Wu <John.Wu at ACM.org>
	* src/capi.h and src/capi.cpp: add two functions to accept new
	data records.
	* examples/tcapi.c: add test case for the two new functions in C
	API
	* java: add new functions to allow a java program to input data to
	Fastbit, add a small test section to milky.cpp to be executed when
	no arguments are provided
	* src/tafel.cpp:740 add a line to assign value to tdesc
	* src/capi.cpp:84 add a block to check for the size of the data
	partition found

2007-10-18 John Wu <John.Wu at ACM.org>
	* src/bitvector.h:814&844, add check for nw > 0 *
	src/bitvector64.h:724&754, add check for nw > 0.  These two fix a
	problem caused by a particular word that causes
	ibis::bitvector::copy_runs to pass beyond the end of the array
	m_vec.  This can happen when the word beyond the last element of
	the m_vec is equivalent to a 0-length fill.  Out of 4 billion
	possible values in a 32-bit word just beyond the end of the array
	in a bitvector, 2 of them can do this and they are somehow used by
	the GNU C++ compiler on the intel-based Mac probably for some
	internal marking.

2007-10-17 John Wu <John.Wu at ACM.org>
	* src/tafel.cpp:901 add statement to prevent FastBit from
	attempting to build indexes for arbitrary strings (ibis::TEXT).
	To build an index for such type of column, FastBit requires
	something called a term-document list (matrix), which most users
	are unlikely to have.  This removes the warning messages when
	running examples/ardea.cpp without any arguments.

2007-10-16 John Wu <John.Wu at ACM.org>
	* java/Makefile.am: add the initial version of automake file
	* tests/scripts/matchCounts.pl: add additional check for error messages

2007-10-14 John Wu <John.Wu at ACM.org>
	* java/milky.java: add a test program that mirrors examples/tcapi.c

2007-10-13 John Wu <John.Wu at ACM.org>
	* capi.h, capi.cpp: update the C API in preparation for java
	interface

2007-10-11 John Wu <John.Wu at ACM.org>
	* src/resoruce.cpp: change all calls to logMessage to use LOGGER
	macro
	* src/predicate.l, src/predicate.y, src/qExpr.h: add operator %

2007-10-07 John Wu <John.Wu at ACM.org>
	* examples/ibis.cpp -- add reverseDeletion and option -k to exercise
	the function ibis::part::reactivate (change doDelete to doDeletion)
	* tests/Makefile.am -- add a small test case for -j and -k options
	of ibis, correct the test cases for check-tcapi
	* src/index.cpp -- in function create, add calls to compute the
	actual min and max when deciding what index to build for default
	options
	* src/array_t.cpp:187 -- add check for isFileMap, otherwise, some
	functions may attempt to modify files open in read-only mode
	* src/array_t.cpp: -- add checks for uninitialized m_begin
	* renamed all dataTable() to partition(), theTable to thePart

2007-10-07 matthias Vallentin <vallentin at icsi.berkeley.edu>
	* src/parti.cpp:1261 -- change deactivate to reactivate

2007-10-07 John Wu <John.Wu at ACM.org>
	* src/tafel.cpp: line 912 -- add call to flushDir to remove stale
	references to files.  This may be related to a crash experienced
	by Matthias Vallentin, but I am not able reproduce the crash on
	a MacOS accessible to me.  Add a call to flushDir in
	ibis::part::append1 (in parti.cpp) to address the same problem.
	* tests/Makefile.am: add a second run of ardea to generate 200
	rows of test data for checking the three test programs.  In the
	previous version of the code, running ardea a second time would
	cause errors.

2007-10-05 John Wu <John.Wu at ACM.org>
	* examples/ibis.cpp: add command line option -l for user to
	specify a file to log error messages

2007-10-04 John Wu <John.Wu at ACM.org>
	* src/util.h, ...: add functions ibis::util::getLogFile and
	ibis::util::setLogFile, add class ibis::util::logger, replace all
	explicit use of std::cout, std::cerr, and std::clog with calls to
	ibis::util::logger

2007-09-24 John Wu <John.Wu at ACM.org>
	* ixfuge.cpp: add this file to implement ibis::fuge class
	for interval-equality encoding with binning

2007-09-17 John Wu <John.Wu at ACM.org>
	* examples/ibis.cpp: add option -j to deactivate rows (reuse -z as
	secondary option to actually expunge the inactive rows)

2007-09-13 John Wu <John.Wu at ACM.org>
	* src/i*.cpp: change most references to col->dataTable->nRows() to
	nrows stored in the index class.  This change is required to make
	it possible to use index built earlier for a partition with a
	smaller number of rows.

2007-08-30 John Wu <John.Wu at ACM.org>
	* ibis::part: add five new functions to allow existing rows to be
	marked inactive or removed

2007-08-29 John Wu <John.Wu at ACM.org>
	* src/column.cpp: add code to make use of indexes built form
	smaller number of rows than currently available

2007-08-23 Matthias Vallentin <vallentin at icsi.berkeley.edu>
	* examples/ardea.cpp:53-54 fix wrong flags in usage example

2007-08-23 John Wu <John.Wu at ACM.org>
	* src/capi.h: add conditional macros to include config.h
	* tests/readcsv.cpp: add conditional macro __APPLE__ for compiling
	on Apple MacOS
	* tests/Makefile.am: change ++ to expr expression for
	compatibility with bourne shell

2007-08-22 John Wu <John.Wu at ACM.org>
	* src/bundle.cpp: in ibis::bundles::sort add special case for
	nPlain() == 0
	* src/mensa.cpp: change ibis::nameList to ibis::selected to
	correct problems with select clauses containing functions
	* examples/thula.cpp: terminate doQuery when the select clause
	contains functions (as indicated by the presence of '(')
	
2007-08-11 John Wu <John.Wu at ACM.org>
	* tests/Makefile.am: add case number in print out and count the
	number of successful test cases in match-counts

2007-08-10 John Wu <John.Wu at ACM.org>
	* array_t.cpp: change the variables used to store differences
	between two pointers to type size_t or off_t instead of uint32_t
	or int32_t

	* category.cpp: to avoid problems with bad data files, swap
	arguements 2 and 3, truncate large files that have extra records
	(keeping only the first nRows), check number of records in
	function fillIndex when working with a stable copy of the current
	data

	* tests/Makefile.am: add more operations to run for target check

	* doc/quickstart.html: currect typoes and formating mistakes

	* examples/ibis.cpp:2191 add test to prevent the call to indexSpec
	when the user did not specify an indexing option.  Without this
	check, it removes the existing indexing specification when nothing
	is specified.  Change all table to partition in the comments.

2007-08-09 John Wu <John.Wu at ACM.org>
	* tests/Makefile.am: add test case check-ardea to check for the
	problem found by Mark

	* query.cpp: add code to accept count(*) as select clause

	* ibis.cpp: allow multiple threads being used on MS windows; set
	the default number of threads to the number of processors online
	(minus one if more than than two processors are on line)

2007-08-09 Mark Sordo <msordo at yahoo-inc.com>
	* tafel.cpp:746 add tname != 0 to if test

2007-07-27 John Wu <John.Wu at ACM.org>
	* copied files into this new directory structure, start building a
	new set of autoconf/automake scripts.

	* designate the current version a0.7.
